// mobile < 768px
// fixture sm
// col 4
// unit -(container/4) + 20px
// gutter 20px
// margin - 5px
// container-size 100% - (5px*2)

// 768px < ipad <960px
// fixture md
// col 12
// unit -(container/4) + 20px
// gutter 20px
// margin - 30px
// container-size 100% - (30px*2)
// max-container size 960px

// 1200px<=
// fixture lg
// col 12
// unit -75px
// gutter 20px
// margin - auto
// container-1140px
// max-container -1140px

// container - 그리드가 적용되는 영역
// col-사이즈
// row - 가로정렬

$gutter: 20px;

$sm-columns: 4;
$sm-margin: 5px;

$md-breakpoint: 768px;
$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + $md-margin * 2;

$lg-breakpoint: 1200px;
$lg-columns: 12;
$lg-unit: 75px;
$lg-max-container: ($lg-unit + $gutter) * $lg-columns;

.container {
  width: 100%;
  padding: 0 $sm-margin;
  margin: 0 auto; //화면 정중앙 배치
  .row {
    display: flex;
    flex-wrap: wrap; // width가 부모보다 클 때 아래로 넘김
  }
  //속성선택자 html attr 이름
  // 클래스 col-로 시작하는 클래스 다 선택하게해준다. ^= col-sm-1, col-md-2
  [class^="col-"] {
    padding: 0 $gutter/2;
  }

  @for $i from 1 through $sm-columns {
    .col-sm-#{$i} {
      width: percentage($i / $sm-columns);
    }
  }
}

@media screen and (min-width: $md-breakpoint) {
  .container {
    max-width: $md-max-container;
    padding: 0 $md-margin;

    @for $i from 1 through $md-columns {
      .col-md-#{$i} {
        width: percentage($i / $md-columns);
      }
    }
  }
}

@media screen and (min-width: $lg-breakpoint) {
  .container {
    max-width: $lg-max-container;
    padding: 0;
    margin: 0 auto;
    @for $i from 1 through $lg-columns {
      .col-lg-#{$i} {
        width: ($lg-unit + $gutter) * $i;
      }
    }
  }
}
